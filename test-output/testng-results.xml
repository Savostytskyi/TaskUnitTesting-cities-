<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" total="7" passed="6">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="3703" started-at="2015-05-17T20:46:32Z" finished-at="2015-05-17T20:46:36Z">
    <groups>
    </groups>
    <test name="Default test" duration-ms="3703" started-at="2015-05-17T20:46:32Z" finished-at="2015-05-17T20:46:36Z">
      <class name="epam.com.game.GameTest">
        <test-method status="PASS" signature="beforeClass()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeClass" is-config="true" duration-ms="19" started-at="2015-05-17T23:46:33Z" finished-at="2015-05-17T23:46:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeClass -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:33Z" finished-at="2015-05-17T23:46:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="FAIL" signature="buildTest()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="buildTest" duration-ms="160" started-at="2015-05-17T23:46:33Z" finished-at="2015-05-17T23:46:33Z">
          <exception class="java.lang.IllegalStateException">
            <message>
              <![CDATA[missing behavior definition for the preceding method call:
CitiesDBParser.cityesDocumentParser()
Usage is: expect(a.foo()).andXXX()]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalStateException: missing behavior definition for the preceding method call:
CitiesDBParser.cityesDocumentParser()
Usage is: expect(a.foo()).andXXX()
	at org.easymock.internal.MocksControl.replay(MocksControl.java:231)
	at org.easymock.EasyMock.replay(EasyMock.java:2032)
	at epam.com.game.GameTest.buildTest(GameTest.java:40)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:497)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:659)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:845)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1153)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:771)
	at org.testng.TestRunner.run(TestRunner.java:621)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:357)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:352)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:310)
	at org.testng.SuiteRunner.run(SuiteRunner.java:259)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1199)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1124)
	at org.testng.TestNG.run(TestNG.java:1032)
	at org.testng.remote.RemoteTestNG.run(RemoteTestNG.java:111)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:204)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:175)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalStateException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- buildTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:33Z" finished-at="2015-05-17T23:46:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:33Z" finished-at="2015-05-17T23:46:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="prepareGameTest(java.lang.Integer, java.lang.Integer)[pri:0, instance:epam.com.game.GameTest@566776ad]" name="prepareGameTest" duration-ms="1801" started-at="2015-05-17T23:46:33Z" description="Initialaizin objects of players" data-provider="dpPlayersOne" finished-at="2015-05-17T23:46:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareGameTest -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:34Z" finished-at="2015-05-17T23:46:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="prepareGameTest(java.lang.Integer, java.lang.Integer)[pri:0, instance:epam.com.game.GameTest@566776ad]" name="prepareGameTest" duration-ms="1680" started-at="2015-05-17T23:46:34Z" description="Initialaizin objects of players" data-provider="dpPlayersOne" finished-at="2015-05-17T23:46:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[5]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareGameTest -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:34Z" finished-at="2015-05-17T23:46:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterClass()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterClass" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterClass -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="prepareGameTestF(java.lang.Integer, java.lang.Integer)[pri:0, instance:epam.com.game.GameTest@566776ad]" name="prepareGameTestF" duration-ms="0" started-at="2015-05-17T23:46:36Z" description="Initialaizin objects of players" data-provider="dpPlayersTwo" finished-at="2015-05-17T23:46:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[18]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareGameTestF -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="prepareGameTestF(java.lang.Integer, java.lang.Integer)[pri:0, instance:epam.com.game.GameTest@566776ad]" name="prepareGameTestF" duration-ms="0" started-at="2015-05-17T23:46:36Z" description="Initialaizin objects of players" data-provider="dpPlayersTwo" finished-at="2015-05-17T23:46:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[-6]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[7]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareGameTestF -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="prepareGameTestF(java.lang.Integer, java.lang.Integer)[pri:0, instance:epam.com.game.GameTest@566776ad]" name="prepareGameTestF" duration-ms="0" started-at="2015-05-17T23:46:36Z" description="Initialaizin objects of players" data-provider="dpPlayersTwo" finished-at="2015-05-17T23:46:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareGameTestF -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="prepareGameTestF(java.lang.Integer, java.lang.Integer)[pri:0, instance:epam.com.game.GameTest@566776ad]" name="prepareGameTestF" duration-ms="0" started-at="2015-05-17T23:46:36Z" description="Initialaizin objects of players" data-provider="dpPlayersTwo" finished-at="2015-05-17T23:46:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[0]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prepareGameTestF -->
        <test-method status="PASS" signature="beforeMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="beforeMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method status="PASS" signature="afterMethod()[pri:0, instance:epam.com.game.GameTest@566776ad]" name="afterMethod" is-config="true" duration-ms="0" started-at="2015-05-17T23:46:36Z" finished-at="2015-05-17T23:46:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
      </class> <!-- epam.com.game.GameTest -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
